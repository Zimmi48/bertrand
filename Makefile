##############################################################################
##                 The Calculus of Inductive Constructions                  ##
##                                                                          ##
##                                Projet Coq                                ##
##                                                                          ##
##                     INRIA                        ENS-CNRS                ##
##              Rocquencourt                        Lyon                    ##
##                                                                          ##
##                                  Coq V7                                  ##
##                                                                          ##
##                                                                          ##
##############################################################################

# WARNING
#
# This Makefile has been automagically generated by coq_makefile
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

##########################
#                        #
# Variables definitions. #
#                        #
##########################

CAMLP4LIB=`camlp4 -where`
COQSRC=-I $(COQTOP)/kernel -I $(COQTOP)/lib \
  -I $(COQTOP)/library -I $(COQTOP)/parsing \
  -I $(COQTOP)/pretyping -I $(COQTOP)/interp \
  -I $(COQTOP)/proofs -I $(COQTOP)/syntax -I $(COQTOP)/tactics \
  -I $(COQTOP)/toplevel -I $(COQTOP)/contrib/correctness \
  -I $(COQTOP)/contrib/extraction -I $(COQTOP)/contrib/field \
  -I $(COQTOP)/contrib/fourier -I $(COQTOP)/contrib/graphs \
  -I $(COQTOP)/contrib/interface -I $(COQTOP)/contrib/jprover \
  -I $(COQTOP)/contrib/omega -I $(COQTOP)/contrib/romega \
  -I $(COQTOP)/contrib/ring -I $(COQTOP)/contrib/xml \
  -I $(CAMLP4LIB)
ZFLAGS=$(OCAMLLIBS) $(COQSRC)
OPT=
COQFLAGS=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
COQC=$(COQBIN)coqc
GALLINA=gallina
COQDOC=coqdoc
CAMLC=ocamlc -c
CAMLOPTC=ocamlopt -c
CAMLLINK=ocamlc
CAMLOPTLINK=ocamlopt
COQDEP=$(COQBIN)coqdep -c
COQVO2XML=coq_vo2xml
GRAMMARS=grammar.cma
CAMLP4EXTEND=pa_extend.cmo pa_ifdef.cmo q_MLast.cmo
PP=-pp "camlp4o -I . -I $(COQTOP)/parsing $(CAMLP4EXTEND) $(GRAMMARS) -impl"

#########################
#                       #
# Libraries definition. #
#                       #
#########################

OCAMLLIBS=-I .\
  -I why
COQLIBS=-I .\
  -I why

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES=Bertrand.v\
  Binomial.v\
  Check128.v\
  Div.v\
  DivDirac.v\
  Divides.v\
  Extraction.v\
  Factorial_bis.v\
  Gcd.v\
  Knuth_def.v\
  Knuth_why.v\
  Misc.v\
  Partition.v\
  Power.v\
  PowerBinomial.v\
  PowerDiv.v\
  Prime.v\
  PrimeDirac.v\
  Product.v\
  Raux.v\
  Summation.v\
  sTactic.v
VOFILES=$(VFILES:.v=.vo)
VIFILES=$(VFILES:.v=.vi)
GFILES=$(VFILES:.v=.g)
HTMLFILES=$(VFILES:.v=.html)
GHTMLFILES=$(VFILES:.v=.g.html)

all: why\
  Bertrand.vo\
  Binomial.vo\
  Check128.vo\
  Div.vo\
  DivDirac.vo\
  Divides.vo\
  Extraction.vo\
  Factorial_bis.vo\
  Gcd.vo\
  Knuth_def.vo\
  Knuth_why.vo\
  Misc.vo\
  Partition.vo\
  Power.vo\
  PowerBinomial.vo\
  PowerDiv.vo\
  Prime.vo\
  PrimeDirac.vo\
  Product.vo\
  Raux.vo\
  Summation.vo\
  sTactic.vo\
  run_partition.ml

spec: $(VIFILES)

gallina: $(GFILES)

html: $(HTMLFILES)

gallinahtml: $(GHTMLFILES)

all.ps: $(VFILES)
	$(COQDOC) -ps -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(VFILES)
	$(COQDOC) -ps -g -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

xml:: .xml_time_stamp
.xml_time_stamp: Bertrand.vo\
  Binomial.vo\
  Check128.vo\
  Div.vo\
  DivDirac.vo\
  Divides.vo\
  Extraction.vo\
  Factorial_bis.vo\
  Gcd.vo\
  Knuth_def.vo\
  Knuth_why.vo\
  Misc.vo\
  Partition.vo\
  Power.vo\
  PowerBinomial.vo\
  PowerDiv.vo\
  Prime.vo\
  PrimeDirac.vo\
  Product.vo\
  Raux.vo\
  Summation.vo\
  sTactic.vo
	$(COQVO2XML) $(COQFLAGS) $(?:%.o=%)
	touch .xml_time_stamp

###################
#                 #
# Custom targets. #
#                 #
###################

run_partition.ml: Extraction.vo
	cat ex1.ml partition.ml ex2.ml > run_partition.ml

###################
#                 #
# Subdirectories. #
#                 #
###################

why:
	cd why ; $(MAKE) all

####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend xml why

.SUFFIXES: .v .vo .vi .g .html .tex .g.tex .g.html

.v.vo:
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

.v.vi:
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

.v.g:
	$(GALLINA) $<

.v.tex:
	$(COQDOC) -latex $< -o $@

.v.html:
	$(COQDOC) -html $< -o $@

.v.g.tex:
	$(COQDOC) -latex -g $< -o $@

.v.g.html:
	$(COQDOC) -html -g $< -o $@

byte:
	$(MAKE) all "OPT="

opt:
	$(MAKE) all "OPT=-opt"

include .depend

.depend depend:
	rm -f .depend
	$(COQDEP) -i $(COQLIBS) *.v *.ml *.mli >.depend
	$(COQDEP) $(COQLIBS) -suffix .html *.v >>.depend
	(cd why ; $(MAKE) depend)

xml::
	(cd why ; $(MAKE) xml)

install:
	mkdir -p `$(COQC) -where`/user-contrib
	cp -f *.vo `$(COQC) -where`/user-contrib
	(cd why ; $(MAKE) install)

Makefile: Make
	mv -f Makefile Makefile.bak
	$(COQBIN)coq_makefile -f Make -o Makefile

clean:
	rm -f *.cmo *.cmi *.cmx *.o *.vo *.vi *.g *~
	rm -f all.ps all-gal.ps $(HTMLFILES) $(GHTMLFILES)
	(cd why ; $(MAKE) clean)

archclean:
	rm -f *.cmx *.o
	(cd why ; $(MAKE) archclean)

# WARNING
#
# This Makefile has been automagically generated by coq_makefile
# Edit at your own risks !
#
# END OF WARNING

